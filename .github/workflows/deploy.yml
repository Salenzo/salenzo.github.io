name: Deploy to every platform
run-name: GitHubにできることはまだあるかい
on:
  schedule:
  - cron: "19 19 8-10 * *"
  push:
    branches:
    - main
# Set permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages.
permissions:
  contents: read
  pages: write
  id-token: write
# Allow one concurrent deployment.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  aaaaaa:
    runs-on: ubuntu-latest
    steps:
    # Check-out the repository under $GITHUB_WORKSPACE, so the job can access it.
    - uses: actions/checkout@v3
    - name: aaaaaaaaaaaa
      run: |
        w

        # Probe the environment.
        perl --version
        python --version
        ruby --version

        # 一些bash命令。
        cd "$GITHUB_WORKSPACE"
        echo "字数统计：README.md有$(cat "README.md" | wc -m)个字符。"
        echo いいよ、こいよ！

  gh-pages:
    needs: aaaaaa
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    # Deploy Jekyll with GitHub Pages dependencies preinstalled.
    - uses: actions/checkout@v3
    - uses: actions/configure-pages@v2
    - uses: actions/jekyll-build-pages@v1
      with:
        source: ./src
        destination: ./_site
    - uses: actions/upload-pages-artifact@v1
    - uses: actions/deploy-pages@v1

  gitlab-vercel:
    needs: aaaaaa
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: recursive
    - id: cache-gitlab-runner
      uses: actions/cache@v3
      with:
        path: gitlab-runner
        key: gitlab-runner-linux-amd64
    - if: steps.cache-gitlab-runner.outputs.cache-hit != 'true'
      run: |
        curl -Lo gitlab-runner "https://gitlab-runner-downloads.s3.amazonaws.com/latest/binaries/gitlab-runner-linux-amd64"
    - run: |
        # Mirror to GitLab.
        # This personal, private repository is for Vercel, which doesn't accept organization repositories as sources.
        git push "https://$USERNAME:$PASSWORD@gitlab.com/satgo1546/salenzo.github.io.git" main --force

        # Run GitLab CI/CD pipelines using GitHub Actions as a runner to deploy to GitLab Pages.
        git push "https://$USERNAME:$PASSWORD@gitlab.com/salenzo/salenzo.gitlab.io.git" --all --force
        chmod +x gitlab-runner
        sudo useradd --create-home gitlab-runner --shell /bin/bash
        sudo ./gitlab-runner install --user=gitlab-runner --working-directory=/home/gitlab-runner
        sudo ./gitlab-runner start
        sudo ./gitlab-runner register --non-interactive \
          --executor docker \
          --url "https://gitlab.com/" \
          --registration-token "$REGISTRY" \
          --name "octocat" \
          --docker-image busybox \
          --docker-privileged=true \
          --locked=false
        journalctl --unit=gitlab-runner --follow --no-tail --output=cat | timeout 114 sed '/Job succeeded\|Failed to process runner/q'
        sudo ./gitlab-runner unregister --name "octocat"
      env:
        USERNAME: satgo1546
        PASSWORD: ${{ secrets.GITLAB_TOKEN }}
        REGISTRY: ${{ secrets.GITLAB_RUNNER_TOKEN }}

  neocities:
    needs: aaaaaa
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: "3.1"
        bundler-cache: true
    - run: |
        # Deploy to Neocities with a custom script.
        mkdir _neocities
        cd _neocities
        echo "Hello, Neocities!" > index.html
        ../neocities.rb
      env:
        NEOCITIES_TOKEN: ${{ secrets.NEOCITIES_TOKEN }}
